// Generated by dts-bundle v0.5.0
// Dependencies for this module:
//   ../rxstore

declare module 'manttest-client-details-store' {
	export * from "manttest-client-details-store/index";
}

declare module 'manttest-client-details-store/index' {
	export * from "manttest-client-details-store/store";
}

declare module 'manttest-client-details-store/store' {
	import "rxjs/add/observable/of";
	import "rxjs/add/observable/merge";
	import "rxjs/add/operator/distinctUntilChanged";
	import "rxjs/add/operator/filter";
	import "rxjs/add/operator/map";
	import "rxjs/add/operator/switchMap";
	import "rxjs/add/operator/startWith";
	import "rxjs/add/operator/observeOn";
	import "rxjs/add/operator/subscribeOn";
	import "rxjs/add/operator/debounceTime";
	import "rxjs/add/operator/timeout";
	import { TypedActionDescription, EmptyActionDescription, Store, ICreateStoreOptions } from "rxstore";
	export interface DetailsState {
		isAvatarButtonOpen: boolean;
		isLoading: boolean;
		item: RequestsDetailedItemModel | null;
	}
	export interface RequestsDetailedItemModel {
		id: string;
		subject: string;
		subtitle: string;
		description: string;
		contactname: string;
		contact: string;
		status: RequestsItemStatusModel | null;
		futureStatus: RequestsItemStatusModel[];
	}
	export interface RequestsItemStatusModel {
		letter: string;
		name: string;
		color: string;
		forecolor: string;
		systemname: string;
		id: string;
	}
	export interface ChangeStatusPayload {
		newStatus: RequestsItemStatusModel;
	}
	export interface DetailsEvents {
		toggleAvatarButton(): void;
		editRequest(item: RequestsDetailedItemModel): void;
		changeStatus(newStatus: RequestsItemStatusModel): void;
	}
	export const DetailsActions: {
		toggleAvatarButton: EmptyActionDescription<DetailsState>;
		loadItem: TypedActionDescription<DetailsState, RequestsDetailedItemModel>;
		editRequest: TypedActionDescription<DetailsState, RequestsDetailedItemModel>;
		changeStatus: TypedActionDescription<DetailsState, RequestsItemStatusModel>;
	};
	export type DetailsStore = Store<DetailsState> & DetailsEvents;
	export const defaultDetailsState: () => DetailsState;
	export const createDetailsStore: () => (options?: ICreateStoreOptions<DetailsState> | undefined) => DetailsStore;
}

